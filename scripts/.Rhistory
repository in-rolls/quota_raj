all_obc_2015 = ifelse(raj_panch$reservation_2015 %in% c("OBC",  "OBC (Woman)"), 1, 0),
all_obc_2020 = ifelse(raj_panch$reservation_2020 %in% c("OBC",  "OBC (Woman)"), 1, 0),
fe_key_2010 = paste(dist_name_2010, samiti_name_2010),
cluster_key_2010 = paste(dist_name_2010, samiti_name_2010, gp_2010),
fe_key_2015 = paste(dist_name_2015,samiti_name_2015),
cluster_key_2015 = paste(dist_name_2015,samiti_name_2015, gp_2015),
fe_key_2020 = paste(district_2020, ps_2020),
cluster_key_2020 = paste(district_2020, ps_2020, gp_2020)
)
names(raj+_panch
names(raj_panch
)
table(raj_panch$district_2020)
sum(raj_panch$district_2020)
summary(raj_panch$district_2020)
summary(unique(raj_panch$gp_2020), unique(raj_panch$ps_2020), unique(raj_panch$district_2020))
summary(unique(raj_panch$gp_2020)
summary(unique(raj_panch$gp_2020))
unique(raj_panch$gp_2020)
count(raj_panch$gp_2020))
count(raj_panch$gp_2020)
unique(raj_panch$gp_2020)
length(unique(raj_panch$gp_2020))
names(raj_panch)
length(unique(raj_panch$gp_2005)
)
unique(raj_panch$ps_2010)
gps <- c(
"gp_2020" = length(unique(raj_panch$gp_2020)),
"gp_2015" = length(unique(raj_panch$gp_2015)),
"gp_2010" = length(unique(raj_panch$gp_2010)),
"gp_2005" = length(unique(raj_panch$gp_2005)),
)
gps <- c(
"gp_2020" = length(unique(raj_panch$gp_2020)),
"gp_2015" = length(unique(raj_panch$gp_2015)),
"gp_2010" = length(unique(raj_panch$gp_2010)),
"gp_2005" = length(unique(raj_panch$gp_2005))
)
gps
pss <- c(
"ps_2020" = length(unique(raj_panch$ps_2020)),
"ps_2015" = length(unique(raj_panch$samiti_name_2015)),
"ps_2010" = length(unique(raj_panch$samiti_name_2010)),
"ps_2005" = length(unique(raj_panch$samiti_name_2005)),
)
pss <- c(
"ps_2020" = length(unique(raj_panch$ps_2020)),
"ps_2015" = length(unique(raj_panch$samiti_name_2015)),
"ps_2010" = length(unique(raj_panch$samiti_name_2010)),
"ps_2005" = length(unique(raj_panch$samiti_name_2005))
)
districts <- c(
"dist_2020" = length(unique(raj_panch$district_2020)),
"dist_2015" = length(unique(raj_panch$dist_name_2015)),
"dist_2010" = length(unique(raj_panch$dist_name_2010)),
"dist_2005" = length(unique(raj_panch$dist_name_2005))
)
gp_summry <- data.frame(gps, pss, districts)
gp_summary <- data.frame(gps, pss, districts)
table(gp_summary)
print(gp_summary)
gps
# Load libs
library(readr)
library(dplyr)
library(xtable)
library(fuzzyjoin)
library(stringr)
library(here)
library(kableExtra)
# Load data
data_dir <- here("..", "data/sarpanch_election_data")
sp_fin_file <- here(data_dir, "sp_2005_2010_2015_2020_fin.csv")
raj_panch <- readr::read_csv(sp_fin_file)
# Create reservation dummies, caste group dummies -------------------------
# inefficient but does the job
raj_panch <- raj_panch %>%
mutate(
treat_2005 = ifelse(raj_panch$reservation_2005 %in% c("GEN W", "OBC W", "SC W", "ST W"), 1, 0),
treat_2010 = ifelse(raj_panch$reservation_2010 %in% c("GENW", "OBCW", "SCW", "STW"), 1, 0),
treat_2015 = ifelse(raj_panch$reservation_2015 %in% c("General (Woman)", "OBC (Woman)", "SC (Woman)", "ST (Woman)"), 1, 0),
treat_2020 = ifelse(raj_panch$reservation_2020 %in% c("General (Woman)", "OBC (Woman)", "SC (Woman)", "ST (Woman)"), 1, 0),
obc_2005 = ifelse(raj_panch$reservation_2005 %in% c("OBC W"), 1, 0),
obc_2010 = ifelse(raj_panch$reservation_2010 %in% c("OBCW"), 1, 0),
obc_2015 = ifelse(raj_panch$reservation_2015 %in% c("OBC (Woman)"), 1, 0),
obc_2020 = ifelse(raj_panch$reservation_2020 %in% c("OBC (Woman)"), 1, 0),
dalit_2005 = ifelse(raj_panch$reservation_2005 %in% c("SC W", "ST W"), 1, 0),
dalit_2010 = ifelse(raj_panch$reservation_2010 %in% c("SCW", "STW"), 1, 0),
dalit_2015 = ifelse(raj_panch$reservation_2015 %in% c("SC (Woman)", "ST (Woman)"), 1, 0),
dalit_2020 = ifelse(raj_panch$reservation_2020 %in% c("SC (Woman)", "ST (Woman)"), 1, 0),
always_treated = ifelse(treat_2005 + treat_2010 + treat_2015 == 3, 1, 0),
never_treated = ifelse(treat_2005 + treat_2010 + treat_2015 == 0, 1, 0),
sometimes_treated = ifelse(treat_2005 + treat_2010 + treat_2015 > 0, 1, 0),
once = ifelse(treat_2005 + treat_2010 + treat_2015 == 1, 1, 0),
twice = ifelse(treat_2005 + treat_2010 + treat_2015 == 2, 1, 0),
inter_always_treated = ifelse(treat_2010 == 1 & treat_2005 == 1, 1, 0),
inter_sometimes_treated = ifelse(treat_2010 == 1 | treat_2005 == 1, 1, 0),
inter_never_treated = ifelse(treat_2005 + treat_2010 == 0, 1, 0),
sc_2010 = ifelse(raj_panch$reservation_2010 %in% c("SC",  "ST" , "SCW" , "STW"), 1, 0),
sc_2015 = ifelse(raj_panch$reservation_2015 %in% c("SC",  "SC (Woman)" , "SCW" , "ST (Woman)"), 1, 0),
sc_2020 = ifelse(raj_panch$reservation_2020 %in% c("SC",  "SC (Woman)" , "SCW" , "ST (Woman)"), 1, 0),
all_obc_2010 = ifelse(raj_panch$reservation_2010 %in% c("OBC",  "OBCW"), 1, 0),
all_obc_2015 = ifelse(raj_panch$reservation_2015 %in% c("OBC",  "OBC (Woman)"), 1, 0),
all_obc_2020 = ifelse(raj_panch$reservation_2020 %in% c("OBC",  "OBC (Woman)"), 1, 0),
fe_key_2010 = paste(dist_name_2010, samiti_name_2010),
cluster_key_2010 = paste(dist_name_2010, samiti_name_2010, gp_2010),
fe_key_2015 = paste(dist_name_2015,samiti_name_2015),
cluster_key_2015 = paste(dist_name_2015,samiti_name_2015, gp_2015),
fe_key_2020 = paste(district_2020, ps_2020),
cluster_key_2020 = paste(district_2020, ps_2020, gp_2020)
)
trans_05_10 <- table(raj_panch$reservation_2005, raj_panch$reservation_2010)
table
table(raj_panch$reservation_2005, raj_panch$reservation_2010)
table(raj_panch$reservation_2005, raj_panch$reservation_2010)
trans_05_10 <- table(raj_panch$treat_2005, raj_panch$treat_2010)
table(raj_panch$treat_2005, raj_panch$treat_2010)
trans_05_10 <- table(raj_panch$treat_2005, raj_panch$treat_2010)
trans_10_15 <- table(raj_panch$treat_2010, raj_panch$treat_2015)
trans_15_20 <- table(raj_panch$treat_2015, raj_panch$treat_2020)
trans_05_15 <- table(raj_panch$treat_2005, raj_panch$treat_2015) #comparison with 2005 that had 33%. (not necessary, but for completeness sake!)
trans_05_20 <- table(raj_panch$treat_2005, raj_panch$treat_2020)
trans_10_15 <- table(raj_panch$treat_2010, raj_panch$treat_2015)
trans_10_20 <- table(raj_panch$treat_2010, raj_panch$treat_2020)
print(trans_matrices <- list(
`2005-2010` = trans_05_10,
`2010-2015` = trans_10_15,
`2015-2020` = trans_15_20,
`2005-2015` = trans_05_15,
`2005-2020` = trans_05_20,
`2010-2015` = trans_10_15,
`2010-2020` = trans_10_20
))
#only look at 0-1 transitions
bin_trans_05_10 <- table(raj_panch$treat_2005, raj_panch$treat_2010)
bin_trans_10_15 <- table(raj_panch$treat_2010, raj_panch$treat_2015)
bin_trans_15_20 <- table(raj_panch$treat_2015, raj_panch$treat_2020)
bin_trans_05_15 <- table(raj_panch$treat_2005, raj_panch$treat_2015)
bin_trans_05_20 <- table(raj_panch$treat_2005, raj_panch$treat_2020)
bin_trans_10_15 <- table(raj_panch$treat_2010, raj_panch$treat_2015)
bin_trans_10_20 <- table(raj_panch$treat_2010, raj_panch$treat_2020)
bin_trans_matrices <- list(
`2005-2010` = bin_trans_05_10,
`2010-2015` = bin_trans_10_15,
`2015-2020` = bin_trans_15_20,
`2005-2015` = bin_trans_05_15,
`2005-2020` = bin_trans_05_20,
`2010-2015` = bin_trans_10_15,
`2010-2020` = bin_trans_10_20
)
chi_sq_test_05_10 <- chisq.test(bin_trans_05_10) # continuity' correction not changing anything
chi_sq_test_05_10
chi_sq_test_05_10 <- chisq.test(bin_trans_05_10) # continuity' correction not changing anything
chi_sq_test_05_10
chi_sq_test_10_15 <- chisq.test(bin_trans_10_15)
chi_sq_test_10_15
chi_sq_test_15_20 <- chisq.test(bin_trans_15_20)
chi_sq_test_15_20
chi_sq_test_05_15 <- chisq.test(bin_trans_05_15)
chi_sq_test_05_15
chi_sq_test_05_20 <- chisq.test(bin_trans_05_20)
chi_sq_test_05_20
chi_sq_test_10_15 <- chisq.test(bin_trans_10_15)
chi_sq_test_10_15
chi_sq_test_10_20 <- chisq.test(bin_trans_10_20)
chi_sq_test_10_20
chi_squared_results <- data.frame(
"Comparison" = c("2005-2010", "2005-2015", "2005-2020", "2010-2015", "2010-2020", "2015-2020"),
"Chi-Squared Test Statistic" = c(chi_sq_test_05_10$statistic, chi_sq_test_05_15$statistic, chi_sq_test_05_20$statistic,
chi_sq_test_10_15$statistic, chi_sq_test_10_20$statistic, chi_sq_test_15_20$statistic),
"Degrees of Freedom" = c(chi_sq_test_05_10$parameter, chi_sq_test_05_15$parameter, chi_sq_test_05_20$parameter,
chi_sq_test_10_15$parameter, chi_sq_test_10_20$parameter, chi_sq_test_15_20$parameter),
"P-Value" = format(c(chi_sq_test_05_10$p.value, chi_sq_test_05_15$p.value, chi_sq_test_05_20$p.value,
chi_sq_test_10_15$p.value, chi_sq_test_10_20$p.value, chi_sq_test_15_20$p.value), scientific = TRUE)
)
chi_squared_results_table <- kable(chi_squared_results, format = "latex", caption = "Chi-Squared Test Results", booktabs = TRUE)
cat(chi_squared_results_table, file = here("..", "tables", "chi_squared_results.tex"))
?kable
chi_squared_results <- data.frame(
"Comparison" = c("2005-2010", "2005-2015", "2005-2020", "2010-2015", "2010-2020", "2015-2020"),
"Chi-Squared Test Statistic" = c(chi_sq_test_05_10$statistic, chi_sq_test_05_15$statistic, chi_sq_test_05_20$statistic,
chi_sq_test_10_15$statistic, chi_sq_test_10_20$statistic, chi_sq_test_15_20$statistic),
"Degrees of Freedom" = c(chi_sq_test_05_10$parameter, chi_sq_test_05_15$parameter, chi_sq_test_05_20$parameter,
chi_sq_test_10_15$parameter, chi_sq_test_10_20$parameter, chi_sq_test_15_20$parameter),
"P-Value" = format(c(chi_sq_test_05_10$p.value, chi_sq_test_05_15$p.value, chi_sq_test_05_20$p.value,
chi_sq_test_10_15$p.value, chi_sq_test_10_20$p.value, chi_sq_test_15_20$p.value), digita = 4)
)
chi_squared_results_table <- kable(chi_squared_results, format = "latex", caption = "Chi-Squared Test Results", booktabs = TRUE)
cat(chi_squared_results_table, file = here("..", "tables", "chi_squared_results.tex"))
chi_squared_results <- data.frame(
"Comparison" = c("2005-2010", "2005-2015", "2005-2020", "2010-2015", "2010-2020", "2015-2020"),
"Chi-Squared Test Statistic" = c(chi_sq_test_05_10$statistic, chi_sq_test_05_15$statistic, chi_sq_test_05_20$statistic,
chi_sq_test_10_15$statistic, chi_sq_test_10_20$statistic, chi_sq_test_15_20$statistic),
"Degrees of Freedom" = c(chi_sq_test_05_10$parameter, chi_sq_test_05_15$parameter, chi_sq_test_05_20$parameter,
chi_sq_test_10_15$parameter, chi_sq_test_10_20$parameter, chi_sq_test_15_20$parameter),
"P-Value" = format(c(chi_sq_test_05_10$p.value, chi_sq_test_05_15$p.value, chi_sq_test_05_20$p.value,
chi_sq_test_10_15$p.value, chi_sq_test_10_20$p.value, chi_sq_test_15_20$p.value), digits = 4)
)
chi_squared_results_table <- kable(chi_squared_results, format = "latex", caption = "Chi-Squared Test Results", booktabs = TRUE)
cat(chi_squared_results_table, file = here("..", "tables", "chi_squared_results.tex"))
observed_statistic <- mean(treat_2010) - mean(treat_2005)
observed_statistic <- mean(raj_panch$treat_2010) - mean(raj_panch$treat_2005)
# Create a function to permute the treatment assignment and calculate the test statistic
perm_test <- function(treat_2005, treat_2010) {
combined <- c(raj_panch$treat_2005, raj_panch$treat_2010)
shuffle <- sample(combined)
perm_treat_2005 <- shuffle[1:length(raj_panch$treat_2005)]
perm_treat_2010 <- shuffle[(length(raj_panch$treat_2005) + 1):length(shuffle)]
perm_statistic <- mean(perm_treat_2010) - mean(perm_treat_2005)
return(perm_statistic)
}
# Perform the permutation test
num_permutations <- 1000  # Number of permutations
perm_stats <- replicate(num_permutations, perm_test(treat_2005, treat_2010))
# Calculate the p-value by comparing the observed statistic to the permutation distribution
p_value <- mean(perm_stats >= observed_statistic)
p_value
# Create a function to perform randomization inference for multiple time periods
randomization_inference_multi <- function(treat_1, treat_2, outcome_var) {
observed_diff <- mean(outcome_var[treat_2 == 1]) - mean(outcome_var[treat_1 == 1])
randomization_inference <- function(treatment_1, treatment_2, outcome) {
shuffle <- sample(c(treatment_1, treatment_2))
perm_treatment_1 <- shuffle[1:length(treatment_1)]
perm_treatment_2 <- shuffle[(length(treatment_1) + 1):length(shuffle)]
perm_diff <- mean(outcome[perm_treatment_2 == 1]) - mean(outcome[perm_treatment_1 == 1])
return(perm_diff)
}
num_simulations <- 1000  # Number of simulations
simulated_effects <- replicate(num_simulations, randomization_inference(treat_1, treat_2, outcome_var))
p_value <- mean(simulated_effects >= observed_diff)
return(list(observed_diff = observed_diff, p_value = p_value))
}
# Perform randomization inference for each pair of time periods
result_05_10 <- randomization_inference_multi(raj_panch$treat_2005, raj_panch$treat_2010, raj_panch$outcome_variable)
result_10_15 <- randomization_inference_multi(raj_panch$treat_2010, raj_panch$treat_2015, raj_panch$outcome_variable)
result_15_20 <- randomization_inference_multi(raj_panch$treat_2015, raj_panch$treat_2020, raj_panch$outcome_variable)
# Output the observed differences and p-values for each comparison
result_05_10
result_10_15
result_15_20
names(raj_panch)
# Define the outcome variable based on specified conditions
raj_panch$outcome_variable <- ifelse(raj_panch$treat_2010 == 0 & raj_panch$sex_2010 == "F", 1,
ifelse(raj_panch$treat_2015 == 0 & raj_panch$sex_manual_2015 == "F", 1,
ifelse(raj_panch$treat_2020 == 0 & raj_panch$sex_2020 == "F", 1, 0)))
# Perform randomization inference for each pair of time periods
result_05_10 <- randomization_inference_multi(raj_panch$treat_2005, raj_panch$treat_2010, raj_panch$outcome_variable)
result_10_15 <- randomization_inference_multi(raj_panch$treat_2010, raj_panch$treat_2015, raj_panch$outcome_variable)
result_15_20 <- randomization_inference_multi(raj_panch$treat_2015, raj_panch$treat_2020, raj_panch$outcome_variable)
# Output the observed differences and p-values for each comparison
result_05_10
result_10_15
result_15_20
# Create a function to perform randomization inference for multiple time periods
randomization_inference_multi <- function(treat_1, treat_2, outcome_var) {
observed_diff <- mean(outcome_var[treat_2 == 1]) - mean(outcome_var[treat_1 == 1])
randomization_inference <- function(treatment_1, treatment_2, outcome) {
shuffle <- sample(c(treatment_1, treatment_2))
perm_treatment_1 <- shuffle[1:length(treatment_1)]
perm_treatment_2 <- shuffle[(length(treatment_1) + 1):length(shuffle)]
perm_diff <- mean(outcome[perm_treatment_2 == 1]) - mean(outcome[perm_treatment_1 == 1])
return(perm_diff)
}
num_simulations <- 1000  # Number of simulations
simulated_effects <- replicate(num_simulations, randomization_inference(treat_1, treat_2, outcome_var))
p_value <- mean(simulated_effects >= observed_diff)
return(list(observed_diff = observed_diff, p_value = p_value))
}
# Define the outcome variable based on specified conditions
raj_panch$outcome_variable <- ifelse(raj_panch$treat_2010 == 0 & raj_panch$sex_2010 == "F", 1,
ifelse(raj_panch$treat_2015 == 0 & raj_panch$sex_manual_2015 == "F", 1,
ifelse(raj_panch$treat_2020 == 0 & raj_panch$sex_2020 == "F", 1, 0)))
# Perform randomization inference for each pair of time periods
result_05_10 <- randomization_inference_multi(raj_panch$treat_2005, raj_panch$treat_2010, raj_panch$outcome_variable)
result_10_15 <- randomization_inference_multi(raj_panch$treat_2010, raj_panch$treat_2015, raj_panch$outcome_variable)
result_15_20 <- randomization_inference_multi(raj_panch$treat_2015, raj_panch$treat_2020, raj_panch$outcome_variable)
# Output the observed differences and p-values for each comparison
result_05_10
result_10_15
result_15_20
#only look at 0-1 transitions
obc_trans_05_10 <- table(raj_panch$obc_2005, raj_panch$obc_2010)
obc_trans_10_15 <- table(raj_panch$obc_2010, raj_panch$obc_2015)
obc_trans_15_20 <- table(raj_panch$obc_2015, raj_panch$obc_2020)
obc_trans_05_15 <- table(raj_panch$obc_2005, raj_panch$obc_2015)
obc_trans_05_20 <- table(raj_panch$obc_2005, raj_panch$obc_2020)
obc_trans_10_15 <- table(raj_panch$obc_2010, raj_panch$obc_2015)
obc_trans_10_20 <- table(raj_panch$obc_2010, raj_panch$obc_2020)
obc_trans_matrices <- list(
`2005-2010` = obc_trans_05_10,
`2010-2015` = obc_trans_10_15,
`2015-2020` = obc_trans_15_20,
`2005-2015` = obc_trans_05_15,
`2005-2020` = obc_trans_05_20,
`2010-2015` = obc_trans_10_15,
`2010-2020` = obc_trans_10_20
)
chi_sq_test_05_10 <- chisq.test(obc_trans_05_10) # continuity' correction not changing anything
chi_sq_test_05_10 #done
chi_sq_test_10_15 <- chisq.test(obc_trans_10_15)
chi_sq_test_10_15 #done
chi_sq_test_15_20 <- chisq.test(obc_trans_15_20)
chi_sq_test_15_20#
chi_sq_test_05_15 <- chisq.test(obc_trans_05_15)
chi_sq_test_05_15#done
chi_sq_test_05_20 <- chisq.test(obc_trans_05_20)
chi_sq_test_05_20#done
chi_sq_test_10_20 <- chisq.test(obc_trans_10_20)
chi_sq_test_10_20#done
#only look at 0-1 transitions
all_obc_trans_05_10 <- table(raj_panch$all_obc_2005, raj_panch$all_obc_2010)
all_obc_trans_10_15 <- table(raj_panch$all_obc_2010, raj_panch$all_obc_2015)
all_obc_trans_15_20 <- table(raj_panch$all_obc_2015, raj_panch$all_obc_2020)
all_obc_trans_05_15 <- table(raj_panch$all_obc_2005, raj_panch$all_obc_2015)
# inefficient but does the job
raj_panch <- raj_panch %>%
mutate(
treat_2005 = ifelse(raj_panch$reservation_2005 %in% c("GEN W", "OBC W", "SC W", "ST W"), 1, 0),
treat_2010 = ifelse(raj_panch$reservation_2010 %in% c("GENW", "OBCW", "SCW", "STW"), 1, 0),
treat_2015 = ifelse(raj_panch$reservation_2015 %in% c("General (Woman)", "OBC (Woman)", "SC (Woman)", "ST (Woman)"), 1, 0),
treat_2020 = ifelse(raj_panch$reservation_2020 %in% c("General (Woman)", "OBC (Woman)", "SC (Woman)", "ST (Woman)"), 1, 0),
obc_2005 = ifelse(raj_panch$reservation_2005 %in% c("OBC W"), 1, 0),
obc_2010 = ifelse(raj_panch$reservation_2010 %in% c("OBCW"), 1, 0),
obc_2015 = ifelse(raj_panch$reservation_2015 %in% c("OBC (Woman)"), 1, 0),
obc_2020 = ifelse(raj_panch$reservation_2020 %in% c("OBC (Woman)"), 1, 0),
dalit_2005 = ifelse(raj_panch$reservation_2005 %in% c("SC W", "ST W"), 1, 0),
dalit_2010 = ifelse(raj_panch$reservation_2010 %in% c("SCW", "STW"), 1, 0),
dalit_2015 = ifelse(raj_panch$reservation_2015 %in% c("SC (Woman)", "ST (Woman)"), 1, 0),
dalit_2020 = ifelse(raj_panch$reservation_2020 %in% c("SC (Woman)", "ST (Woman)"), 1, 0),
always_treated = ifelse(treat_2005 + treat_2010 + treat_2015 == 3, 1, 0),
never_treated = ifelse(treat_2005 + treat_2010 + treat_2015 == 0, 1, 0),
sometimes_treated = ifelse(treat_2005 + treat_2010 + treat_2015 > 0, 1, 0),
once = ifelse(treat_2005 + treat_2010 + treat_2015 == 1, 1, 0),
twice = ifelse(treat_2005 + treat_2010 + treat_2015 == 2, 1, 0),
inter_always_treated = ifelse(treat_2010 == 1 & treat_2005 == 1, 1, 0),
inter_sometimes_treated = ifelse(treat_2010 == 1 | treat_2005 == 1, 1, 0),
inter_never_treated = ifelse(treat_2005 + treat_2010 == 0, 1, 0),
sc_2010 = ifelse(raj_panch$reservation_2010 %in% c("SC",  "ST" , "SCW" , "STW"), 1, 0),
sc_2015 = ifelse(raj_panch$reservation_2015 %in% c("SC",  "SC (Woman)" , "SCW" , "ST (Woman)"), 1, 0),
sc_2020 = ifelse(raj_panch$reservation_2020 %in% c("SC",  "SC (Woman)" , "SCW" , "ST (Woman)"), 1, 0),
all_obc_2005 = ifelse(raj_panch$reservation_2005 %in% c("OBC",  "OBC W"), 1, 0),
all_obc_2010 = ifelse(raj_panch$reservation_2010 %in% c("OBC",  "OBCW"), 1, 0),
all_obc_2015 = ifelse(raj_panch$reservation_2015 %in% c("OBC",  "OBC (Woman)"), 1, 0),
all_obc_2020 = ifelse(raj_panch$reservation_2020 %in% c("OBC",  "OBC (Woman)"), 1, 0),
fe_key_2010 = paste(dist_name_2010, samiti_name_2010),
cluster_key_2010 = paste(dist_name_2010, samiti_name_2010, gp_2010),
fe_key_2015 = paste(dist_name_2015,samiti_name_2015),
cluster_key_2015 = paste(dist_name_2015,samiti_name_2015, gp_2015),
fe_key_2020 = paste(district_2020, ps_2020),
cluster_key_2020 = paste(district_2020, ps_2020, gp_2020)
)
#only look at 0-1 transitions
all_obc_trans_05_10 <- table(raj_panch$all_obc_2005, raj_panch$all_obc_2010)
all_obc_trans_10_15 <- table(raj_panch$all_obc_2010, raj_panch$all_obc_2015)
all_obc_trans_15_20 <- table(raj_panch$all_obc_2015, raj_panch$all_obc_2020)
all_obc_trans_05_15 <- table(raj_panch$all_obc_2005, raj_panch$all_obc_2015)
all_obc_trans_05_20 <- table(raj_panch$all_obc_2005, raj_panch$all_obc_2020)
all_obc_trans_10_15 <- table(raj_panch$all_obc_2010, raj_panch$all_obc_2015)
all_obc_trans_10_20 <- table(raj_panch$all_obc_2010, raj_panch$all_obc_2020)
all_obc_trans_matrices <- list(
`2005-2010` = all_obc_trans_05_10,
`2010-2015` = all_obc_trans_10_15,
`2015-2020` = all_obc_trans_15_20,
`2005-2015` = all_obc_trans_05_15,
`2005-2020` = all_obc_trans_05_20,
`2010-2015` = all_obc_trans_10_15,
`2010-2020` = all_obc_trans_10_20
)
chi_sq_test_05_10 <- chisq.test(all_obc_trans_05_10) # continuity' correction not changing anything
chi_sq_test_05_10 #done
chi_sq_test_10_15 <- chisq.test(all_obc_trans_10_15)
chi_sq_test_10_15 #done
chi_sq_test_15_20 <- chisq.test(all_obc_trans_15_20)
chi_sq_test_15_20#
chi_sq_test_05_15 <- chisq.test(all_obc_trans_05_15)
chi_sq_test_05_15#done
chi_sq_test_05_20 <- chisq.test(all_obc_trans_05_20)
chi_sq_test_05_20#done
chi_sq_test_10_20 <- chisq.test(all_obc_trans_10_20)
chi_sq_test_10_20#done
#only look at 0-1 transitions
sc_trans_05_10 <- table(raj_panch$sc_2005, raj_panch$sc_2010)
sc_trans_10_15 <- table(raj_panch$sc_2010, raj_panch$sc_2015)
sc_trans_15_20 <- table(raj_panch$sc_2015, raj_panch$sc_2020)
sc_trans_05_15 <- table(raj_panch$sc_2005, raj_panch$sc_2015)
sc_trans_05_20 <- table(raj_panch$sc_2005, raj_panch$sc_2020)
# inefficient but does the job
raj_panch <- raj_panch %>%
mutate(
treat_2005 = ifelse(raj_panch$reservation_2005 %in% c("GEN W", "OBC W", "SC W", "ST W"), 1, 0),
treat_2010 = ifelse(raj_panch$reservation_2010 %in% c("GENW", "OBCW", "SCW", "STW"), 1, 0),
treat_2015 = ifelse(raj_panch$reservation_2015 %in% c("General (Woman)", "OBC (Woman)", "SC (Woman)", "ST (Woman)"), 1, 0),
treat_2020 = ifelse(raj_panch$reservation_2020 %in% c("General (Woman)", "OBC (Woman)", "SC (Woman)", "ST (Woman)"), 1, 0),
obc_2005 = ifelse(raj_panch$reservation_2005 %in% c("OBC W"), 1, 0),
obc_2010 = ifelse(raj_panch$reservation_2010 %in% c("OBCW"), 1, 0),
obc_2015 = ifelse(raj_panch$reservation_2015 %in% c("OBC (Woman)"), 1, 0),
obc_2020 = ifelse(raj_panch$reservation_2020 %in% c("OBC (Woman)"), 1, 0),
dalit_2005 = ifelse(raj_panch$reservation_2005 %in% c("SC W", "ST W"), 1, 0),
dalit_2010 = ifelse(raj_panch$reservation_2010 %in% c("SCW", "STW"), 1, 0),
dalit_2015 = ifelse(raj_panch$reservation_2015 %in% c("SC (Woman)", "ST (Woman)"), 1, 0),
dalit_2020 = ifelse(raj_panch$reservation_2020 %in% c("SC (Woman)", "ST (Woman)"), 1, 0),
always_treated = ifelse(treat_2005 + treat_2010 + treat_2015 == 3, 1, 0),
never_treated = ifelse(treat_2005 + treat_2010 + treat_2015 == 0, 1, 0),
sometimes_treated = ifelse(treat_2005 + treat_2010 + treat_2015 > 0, 1, 0),
once = ifelse(treat_2005 + treat_2010 + treat_2015 == 1, 1, 0),
twice = ifelse(treat_2005 + treat_2010 + treat_2015 == 2, 1, 0),
inter_always_treated = ifelse(treat_2010 == 1 & treat_2005 == 1, 1, 0),
inter_sometimes_treated = ifelse(treat_2010 == 1 | treat_2005 == 1, 1, 0),
inter_never_treated = ifelse(treat_2005 + treat_2010 == 0, 1, 0),
sc_2005 = ifelse(raj_panch$reservation_2010 %in% c("SC",  "ST" , "SC W" , "ST W"), 1, 0),
sc_2010 = ifelse(raj_panch$reservation_2010 %in% c("SC",  "ST" , "SCW" , "STW"), 1, 0),
sc_2015 = ifelse(raj_panch$reservation_2015 %in% c("SC",  "SC (Woman)" , "SCW" , "ST (Woman)"), 1, 0),
sc_2020 = ifelse(raj_panch$reservation_2020 %in% c("SC",  "SC (Woman)" , "SCW" , "ST (Woman)"), 1, 0),
all_obc_2005 = ifelse(raj_panch$reservation_2005 %in% c("OBC",  "OBC W"), 1, 0),
all_obc_2010 = ifelse(raj_panch$reservation_2010 %in% c("OBC",  "OBCW"), 1, 0),
all_obc_2015 = ifelse(raj_panch$reservation_2015 %in% c("OBC",  "OBC (Woman)"), 1, 0),
all_obc_2020 = ifelse(raj_panch$reservation_2020 %in% c("OBC",  "OBC (Woman)"), 1, 0),
fe_key_2010 = paste(dist_name_2010, samiti_name_2010),
cluster_key_2010 = paste(dist_name_2010, samiti_name_2010, gp_2010),
fe_key_2015 = paste(dist_name_2015,samiti_name_2015),
cluster_key_2015 = paste(dist_name_2015,samiti_name_2015, gp_2015),
fe_key_2020 = paste(district_2020, ps_2020),
cluster_key_2020 = paste(district_2020, ps_2020, gp_2020)
)
#only look at 0-1 transitions
sc_trans_05_10 <- table(raj_panch$sc_2005, raj_panch$sc_2010)
sc_trans_10_15 <- table(raj_panch$sc_2010, raj_panch$sc_2015)
sc_trans_15_20 <- table(raj_panch$sc_2015, raj_panch$sc_2020)
sc_trans_05_15 <- table(raj_panch$sc_2005, raj_panch$sc_2015)
sc_trans_05_20 <- table(raj_panch$sc_2005, raj_panch$sc_2020)
sc_trans_10_15 <- table(raj_panch$sc_2010, raj_panch$sc_2015)
sc_trans_10_20 <- table(raj_panch$sc_2010, raj_panch$sc_2020)
sc_trans_matrices <- list(
`2005-2010` = sc_trans_05_10,
`2010-2015` = sc_trans_10_15,
`2015-2020` = sc_trans_15_20,
`2005-2015` = sc_trans_05_15,
`2005-2020` = sc_trans_05_20,
`2010-2015` = sc_trans_10_15,
`2010-2020` = sc_trans_10_20
)
chi_sq_test_05_10 <- chisq.test(sc_trans_05_10) # continuity' correction not changing anything
chi_sq_test_05_10 #done
chi_sq_test_10_15 <- chisq.test(sc_trans_10_15)
chi_sq_test_10_15 #done
chi_sq_test_15_20 <- chisq.test(sc_trans_15_20)
chi_sq_test_15_20#
chi_sq_test_05_15 <- chisq.test(sc_trans_05_15)
chi_sq_test_05_15#done
chi_sq_test_05_20 <- chisq.test(sc_trans_05_20)
chi_sq_test_05_20#done
chi_sq_test_10_20 <- chisq.test(sc_trans_10_20)
chi_sq_test_10_20#done
chi_sq_test_05_10 <- chisq.test(bin_trans_05_10, ssc = T) # continuity' correction not changing anything
chi_sq_test_05_10 <- chisq.test(bin_trans_05_10) # continuity' correction not changing anything
chi_sq_test_05_10 #done
chi_sq_test_05_10 <- chisq.test(bin_trans_05_10, B = 10000) # continuity' correction not changing anything
chi_sq_test_05_10 #done
chi_sq_test_05_10 <- chisq.test(bin_trans_05_10, corret = TRUE) # continuity' correction not changing anything
chi_sq_test_05_10 #done
chi_sq_test_05_10 <- chisq.test(bin_trans_05_10, correct = TRUE) # continuity' correction not changing anything
chi_sq_test_05_10 #done
library(vcd)  # Loading the vcd package for mosaic plots
install.packages("vcd")
library(vcd)
# Creating mosaic plots for treatment allocation across years
mosaic(bin_trans_05_10, shade = TRUE, main = "Treatment Allocation 2005-2010")
mosaic(bin_trans_10_15, shade = TRUE, main = "Treatment Allocation 2010-2015")
mosaic(bin_trans_15_20, shade = TRUE, main = "Treatment Allocation 2015-2020")
mosaic(bin_trans_05_15, shade = TRUE, main = "Treatment Allocation 2005-2015")
mosaic(bin_trans_05_20, shade = TRUE, main = "Treatment Allocation 2005-2020")
mosaic(bin_trans_10_20, shade = TRUE, main = "Treatment Allocation 2010-2020")
prop_05 <- prop.table(bin_trans_05_10)
prop_05
prop_05 <- prop.table(bin_trans_05_10)
prop_10 <- prop.table(bin_trans_10_15)
prop_15 <- prop.table(bin_trans_15_20)
prop_05_15 <- prop.table(bin_trans_05_15)
prop_05_20 <- prop.table(bin_trans_05_20)
prop_10_20 <- prop.table(bin_trans_10_20)
# Combine proportions into a single data frame
props <- data.frame(
"Year" = c(rep("2005-2010", 4), rep("2010-2015", 4), rep("2015-2020", 4),
rep("2005-2015", 4), rep("2005-2020", 4), rep("2010-2020", 4)),
"Treatment" = rep(c("Treat_0", "Treat_1"), 6),
"Proportion" = c(prop_05, prop_10, prop_15, prop_05_15, prop_05_20, prop_10_20)
)
# Create a stacked bar plot
library(ggplot2)
ggplot(props, aes(x = Year, y = Proportion, fill = Treatment)) +
geom_bar(stat = "identity") +
labs(title = "Proportion of Treatments Across Years", x = "Year", y = "Proportion") +
theme_minimal() +
theme(legend.position = "bottom")
perm_test <- replicate(1000, {
shuffled_treatment <- sample(raj_panch$treat_2005)
})
# Assess the proportion of simulated results more extreme than the observed
obs_statistic <- # Your observed statistic
p_value <- mean(perm_test >= obs_statistic)
names(raj_panch)
table(raj_panch$treat_2005, raj_panch$treat_2010)
print(trans_matrices <- list(
`2005-2010` = trans_05_10,
`2010-2015` = trans_10_15,
`2015-2020` = trans_15_20,
`2005-2015` = trans_05_15,
`2005-2020` = trans_05_20,
`2010-2015` = trans_10_15,
`2010-2020` = trans_10_20
))
